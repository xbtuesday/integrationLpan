<?xml version="1.0" encoding="UTF-8"?>
<beans	 xmlns="http://www.springframework.org/schema/beans" 
		   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		   xmlns:p="http://www.springframework.org/schema/p" 
		   xmlns:tx="http://www.springframework.org/schema/tx"
		   xmlns:context="http://www.springframework.org/schema/context"
		   xsi:schemaLocation="
			http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-3.0.xsd">
		
		<!-- scan redis properties -->
		<context:property-placeholder location="classpath:properties/redis.config.properties" />
		
		<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">  
			<property name="maxIdle" value="${redis.maxIdle}" />  
			<property name="maxActive" value="${redis.maxActive}" />  
			<property name="maxWait" value="${redis.maxWait}" />  
			<property name="testOnBorrow" value="${redis.testOnBorrow}" />  
		</bean>
		
		<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" destroy-method="destroy">
			<property name="poolConfig" ref="poolConfig"></property>  
	        <property name="hostName" value="${redis.host}"></property>  
	        <property name="port" value="${redis.port}"></property>  
	        <property name="timeout" value="${redis.timeout}"></property>  
	        <property name="password" value="${redis.password}"></property>
		</bean>
		<!--redisTemplate配置，redisTemplate是对Jedis的对redis操作的扩展，有更多的操作，封装使操作更便捷  -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">  
		<property name="connectionFactory"   ref="jedisConnectionFactory" />
		<!-- 键的序列化 -->
		<property name="keySerializer">  
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>  
        </property>
        <!-- 值的序列化 -->
        <property name="valueSerializer">  
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>  
        </property>  
	</bean>
	<bean id="jedisPool" class="redis.clients.jedis.JedisPool">
		<constructor-arg index="0" ref="poolConfig" />
		<constructor-arg index="1" value="${redis.host}" type="java.lang.String"/>
		<constructor-arg index="2" value="${redis.port}" type="int" />
	</bean>
		

</beans>